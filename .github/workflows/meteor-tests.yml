name: Meteor Tests

on:
  push:
    branches: [main, devel]
  pull_request:
    branches: [main, devel]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Cache Meteor
        uses: actions/cache@v4
        with:
          path: |
            ~/.meteor
            .meteor/local
          key: ${{ runner.os }}-meteor-${{ hashFiles('.meteor/versions') }}
          restore-keys: |
            ${{ runner.os }}-meteor-

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Meteor
        run: |
          if [ ! -d ~/.meteor ]; then
            curl https://install.meteor.com/ | sh
          fi
          echo "$HOME/.meteor" >> $GITHUB_PATH

      - name: Install npm dependencies
        run: npm ci

      - name: Wait for MongoDB
        run: |
          until mongosh --eval "db.runCommand({ping: 1})" > /dev/null 2>&1; do
            echo "Waiting for MongoDB..."
            sleep 2
          done

      - name: Run Meteor tests
        run: npm run test
        env:
          MONGO_URL: mongodb://localhost:27017/meteor-test
          ROOT_URL: http://localhost:3000

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            .meteor/local/log/
            coverage/
